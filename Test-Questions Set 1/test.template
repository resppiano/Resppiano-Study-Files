{
"AWSTemplateFormatVersion":"2010-09-09",
"Description":"AWS CloudFormation for Mingle my Cloud Content with Auto Scaling configuration",
"Parameters":{
	"CERootInstanceProfile":{
		"Description":"Name of the CE RootInstanceProfile",
		"Type":"String",
		"MinLength":"1", 
		"MaxLength":"255",,
		"AllowedPattern":"[\\x20-\\x7E]*",
		"ConstraintDescription":"Can contain only ASCII characters."
	},
	"AccountName":{
		"Type":"String",
		"Description":"Select the short name for the account you are deploying this to"
	},
	"KeyName":{
		"Description":"Name of an existing EC2 KeyPair to enable SSH access to the instances",
		"Type":"String",
		"MinLength":"1",
		"MaxLength":"64",
		"AllowedPattern":"[-_ a-zA-Z0-9]*",
		"ConstraintDescription":"Can contain only alphanumeric characters, spaces, dashes and underscores."
	},
	"prefix":{
		"Type":"String",
		"Description":"Customer Prefix and it is Mandatory field"
	},
	"elbrunno":{
		"Type":"String",
		"Description":"ELB Runmber. Use this when you want to deploy more than 1 deployment on same account"
	},
	"AZ":{
		"Description":"Comma delimited list of AvailabilityZones where the instances will be created",
		"Type":"CommaDelimitedList"
	},
	"ASGSubnets":{
		"Description":"Comma delimited list of Auto Scaling Group subnets where the instances will be created",
		"Type":"CommaDelimitedList"
	},
	"PublicELBSubnets":{
		"Description":"Comma delimited list of public ELB subnets where the ELBs will be created",
		"Type":"CommaDelimitedList"
	},
	"mingleappsg":{
		"Type":"String",
		"Description":"Mingle application security group"
	},
	"minglewebsg":{
		"Type":"String",
		"Description":"Mingle Web application security group"
	},
	
	"certificatename":{
		"Type":"String",
		"Description":"Certificate name"
	},
	"defaultsg":{
		"Type":"String",
		"Description":"Default security group"
	},
	"outboundinternetsg":{
		"Type":"String",
		"Description":"Outbound Internet security group"
	},
	"privateelbsecuritygroup":{
		"Type":"String",
		"Description":"Private elb securitygroup"
	},
	"publicelbsecuritygroup":{
		"Type":"String",
		"Description":"Public security group"
	},
	"instancerole":{
		"Description":"Role of Instances being launched",
		"Type":"String"
	},
	"HostedZone":{
		"Type":"String",
		"Description":"The DNS name of an existing Amazon Route 53 hosted zone"
	},
	"S3InitialPath":{
		"Type":"String",
		"Description":"s3 initial path"
	},
	"pillarroot":{
		"Type":"String",
		"Description":"Pillar Root used for identifying data elements with pillar"
	},
	"AMIID":{
		"Description":"AMI ID",
		"Type":"String"
	},
	"RenameSystemURL":{
		"Description":"The URL where the rename-system.ps1 script is located.",
		"Type":"String"
	},
	"CECapacity":{
		"Type":"String",
		"Description":"CE Auto Scaling Group Desired Capacity"
	},
	"CEType":{
		"Description":"CE Server EC2 instance type",
		"Type":"String",
		"ConstraintDescription":"must be a valid EC2 instance type."
	},
	"DomainName":{
		"Description":"The domain name of the AD Domain that IR will join.",
		"Type":"String"
	},
	"OU":{
		"Description":"The OU for the app when the domain is joined.",
		"Type":"String"
	},
	"NightlyTag":{
		"Type":"String",
		"Description":"Value to use for Nightly tag on resources."
	},
	"OwnerTag":{
		"Type":"String",
		"Description":"Value to use for Owner tag on resources."
	}
},
"Resources":{
	"CESNSTopic":{
		"Type":"AWS::SNS::Topic"
	},
	"CEBGSERVER":{
		"Type":"AWS::AutoScaling::AutoScalingGroup",
		"Properties":{
			"AvailabilityZones":{
				"Ref":"AZ"
			},
			"VPCZoneIdentifier":{
				"Ref":"ASGSubnets"
			},
			"MinSize":{
				"Ref":"CECapacity"
			},
			"MaxSize":"5",
			"NotificationConfiguration":{
				"TopicARN":{
					"Ref":"CESNSTopic"
				},
				"NotificationTypes":[
					"autoscaling:EC2_INSTANCE_LAUNCH",
					"autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
					"autoscaling:EC2_INSTANCE_TERMINATE",
					"autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
				]
			},
			"DesiredCapacity":{
				"Ref":"CECapacity"
			},
			"LaunchConfigurationName":{
				"Ref":"CELAUNCHCONFIG"
			},
			"Tags":[
				{
					"Key":"Service",
					"Value":"CE-11.1:app",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Product",
					"Value":"mingle",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Name",
					"Value":{
						"Fn::Join":[
							"-",
							[
								"CEBGSERVER",
								{
									"Ref":"prefix"
								}
							]
						]
					},
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Network",
					"Value":"public",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Nightly",
					"Value":{
						"Ref":"NightlyTag"
					},
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Owner",
					"Value":{
						"Ref":"OwnerTag"
					},
					"PropagateAtLaunch":"true"
				}
			]
		}
	},
	"CELAUNCHCONFIG":{
		"Type":"AWS::AutoScaling::LaunchConfiguration",
		"Metadata":{
			"AWS::CloudFormation::Init":{
				"config":{
					"files":{
						"c:\\Windows\\cwi\\wininit.params":{
							"content":{
								"Fn::Join":[
									"",
									[
										"[CE]\n",
										"stack=",
										{
											"Ref":"AWS::StackId"
										},
										"\n",
										"region=",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"CustPrefix=",
										{
											"Ref":"prefix"
										},
										"\n"
									]
								]
							}
						},
						"c:\\Windows\\Temp\\rename-system.ps1":{
							"source":{
								"Ref":"RenameSystemURL"
							}
						},
						"c:\\Windows\\Temp\\grains":{
							"content":{
								"Fn::Join":[
									"",
									[
										"HostedZone: ",
										{
											"Ref":"HostedZone"
										},
										"\n",
										"s3bucketname: ",
										{
											"Fn::Join":[
												"",
												[
													"kel-",
													{
														"Ref":"AccountName"
													},
													"-appdata-",
													{
														"Ref":"AWS::Region"
													}
												]
											]
										},
										"\n",
										"S3InitialPath: ",
										{
											"Ref":"S3InitialPath"
										},
										"\n",
										"S3Region: ",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"region: ",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"prefix: ",
										{
											"Ref":"prefix"
										},
										"\n",
										"AccountName: ",
										{
											"Ref":"AccountName"
										},
										"\n",
										"pillarroot: ",
										{
											"Ref":"pillarroot"
										},
										"\n",
										"role: ",
										{
											"Ref":"instancerole"
										},
										"-bg\n"
									]
								]
							}
						},
						"c:\\Windows\\cwi\\hooks.d\\cfn-auto-reloader.conf":{
							"content":{
								"Fn::Join":[
									"",
									[
										"[cfn-auto-reloader-hook]\n",
										"triggers=post.update\n",
										"path=Resources.CE.Metadata.AWS::CloudFormation::Init\n",
										"action=cfn-init.exe -v -s ",
										{
											"Ref":"AWS::StackId"
										},
										" -r CE",
										" --region ",
										{
											"Ref":"AWS::Region"
										},
										"\n"
									]
								]
							}
						},
						"C:\\kelbc\\log\\initscript.log":{
							"content":"*****************initscript******************************"
						}
					},
					"commands":{
						"1-execute-rename-system":{
							"command":{
								"Fn::Join":[
									"",
									[
										"powershell.exe -ExecutionPolicy Unrestricted C:\\Windows\\Temp\\rename-system.ps1 -appOU IR -name MGMC-IID -iid -domain ",
										{
											"Ref":"DomainName"
										},
										" ",
										"-credentialsURL s3://kel-",
										{
											"Ref":"AccountName"
										},
										"-credentials-",
										{
											"Ref":"AWS::Region"
										},
										"/mingle/domain/domain-join-creds.json -reboot"
									]
								]
							},
							"ignoreErrors":"true",
							"waitAfterCompletion" : "forever"
						},
						"2-enable-start-codedeploy-agent":{
							"command":"powershell.exe -ExecutionPolicy Unrestricted -Command \" & { Set-Service codedeployagent -StartupType Automatic; Start-Service codedeployagent }\" "
						},
						"3-signal-success":{
							"command":{
								"Fn::Join":[
									"",
									[
										"cfn-signal.exe -e 0 \"",
										{
											"Fn::Base64":{
												"Ref":"CEBGWaitHandle"
											}
										},
										"\""
									]
								]
							},
							"waitAfterCompletion":"25"
						}
					}
				}
			}
		},
		"Properties":{
			"ImageId":{
				"Ref":"AMIID"
			},
			"SecurityGroups":[
				{
					"Ref":"defaultsg"
				},
				{
					"Ref":"outboundinternetsg"
				},
				{
					"Ref":"mingleappsg"
				}
			],
			"InstanceType":{
				"Ref":"CEType"
			},
			"EbsOptimized":"true",
			"KeyName":{
				"Ref":"KeyName"
			},
			"IamInstanceProfile":{
				"Ref":"CERootInstanceProfile"
			},
			"BlockDeviceMappings":[
				{
					"DeviceName":"/dev/sda1",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				},
				{
					"DeviceName":"xvdd",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				},
				{
					"DeviceName":"xvde",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				}
			],
			"UserData":{
				"Fn::Base64":{
					"Fn::Join":[
						"",
						[
							"<powershell>\n",
							"cfn-init.exe -v -s ",
							{
								"Ref":"AWS::StackId"
							},
							" -r CELAUNCHCONFIG",
							" --region ",
							{
								"Ref":"AWS::Region"
							},
							"\n",
							"</powershell>"
						]
					]
				}
			}
		}
	},
	"CEBGWaitHandle":{
		"Type":"AWS::CloudFormation::WaitConditionHandle"
	},
	"CEBGWaitCondition":{
		"Type":"AWS::CloudFormation::WaitCondition",
		"Properties":{
			"Handle":{
				"Ref":"CEBGWaitHandle"
			},
			"Timeout":"7200",
			"Count":{
				"Ref":"CECapacity"
			}
		}
	},
	"CEAutoBGscaleUpPolicy":{
		"Type":"AWS::AutoScaling::ScalingPolicy",
		"Properties":{
			"AdjustmentType":"PercentChangeInCapacity",
			"AutoScalingGroupName":{
				"Ref":"CEBGSERVER"
			},
			"Cooldown":"300",
			"ScalingAdjustment":"50"
		}
	},
	"CEBGAutoscaleDownPolicy":{
		"Type":"AWS::AutoScaling::ScalingPolicy",
		"Properties":{
			"AdjustmentType":"PercentChangeInCapacity",
			"AutoScalingGroupName":{
				"Ref":"CEBGSERVER"
			},
			"Cooldown":"300",
			"ScalingAdjustment":"-33"
		}
	},
	"CEBGCloudWatchCPUAlarmHigh":{
		"Type":"AWS::CloudWatch::Alarm",
		"Properties":{
			"AlarmDescription":"SNS Notification if CPU Util is Higher than 90% for 10 mins",
			"MetricName":"CPUUtilization",
			"Namespace":"AWS/EC2",
			"Statistic":"Average",
			"Period":"300",
			"EvaluationPeriods":"2",
			"Threshold":"90",
			"AlarmActions":[
				{
					"Ref":"CEAutoBGscaleUpPolicy"
				},
				{
					"Ref":"CESNSTopic"
				}
			],
			"Dimensions":[
				{
					"Name":"AutoScalingGroupName",
					"Value":{
						"Ref":"CEBGSERVER"
					}
				}
			],
			"ComparisonOperator":"GreaterThanThreshold"
		}
	},
	"CEBGCloudWatchCPUAlarmLow":{
		"Type":"AWS::CloudWatch::Alarm",
		"Properties":{
			"AlarmDescription":"SNS Notification if CPU Util is less than 70% for 10 mins",
			"MetricName":"CPUUtilization",
			"Namespace":"AWS/EC2",
			"Statistic":"Average",
			"Period":"300",
			"EvaluationPeriods":"2",
			"Threshold":"70",
			"AlarmActions":[
				{
					"Ref":"CEBGAutoscaleDownPolicy"
				},
				{
					"Ref":"CESNSTopic"
				}
			],
			"Dimensions":[
				{
					"Name":"AutoScalingGroupName",
					"Value":{
						"Ref":"CEBGSERVER"
					}
				}
			],
			"ComparisonOperator":"LessThanThreshold"
		}
	},
	"CEWEBUISERVER":{
		"Type":"AWS::AutoScaling::AutoScalingGroup",
		"DependsOn":"CEBGWaitCondition",
		"Properties":{
			"AvailabilityZones":{
				"Ref":"AZ"
			},
			"VPCZoneIdentifier":{
				"Ref":"ASGSubnets"
			},
			"MinSize":{
				"Ref":"CECapacity"
			},
			"MaxSize":"5",
			"NotificationConfiguration":{
				"TopicARN":{
					"Ref":"CESNSTopic"
				},
				"NotificationTypes":[
					"autoscaling:EC2_INSTANCE_LAUNCH",
					"autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
					"autoscaling:EC2_INSTANCE_TERMINATE",
					"autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
				]
			},
			"LoadBalancerNames":[
				{
					"Ref":"ELBCEIFS"
				},
				{
					"Ref":"ELBCEPORTAL"
				},
				{
					"Ref":"ELBCECOLLABO"
				}
			],
			"DesiredCapacity":{
				"Ref":"CECapacity"
			},
			"LaunchConfigurationName":{
				"Ref":"CEWEBUILAUNCHCONFIG"
			},
			"Tags":[
				{
					"Key":"Service",
					"Value":"CE-11.1:app",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Product",
					"Value":"mingle",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Name",
					"Value":{
						"Fn::Join":[
							"-",
							[
								"CEWEBUISERVER",
								{
									"Ref":"prefix"
								}
							]
						]
					},
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Network",
					"Value":"public",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Nightly",
					"Value":{
						"Ref":"NightlyTag"
					},
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Owner",
					"Value":{
						"Ref":"OwnerTag"
					},
					"PropagateAtLaunch":"true"
				}
			]
		}
	},
	"CEWEBUILAUNCHCONFIG":{
		"Type":"AWS::AutoScaling::LaunchConfiguration",
		"Metadata":{
			"AWS::CloudFormation::Init":{
				"config":{
					"files":{
						"c:\\Windows\\cwi\\wininit.params":{
							"content":{
								"Fn::Join":[
									"",
									[
										"[CE]\n",
										"stack=",
										{
											"Ref":"AWS::StackId"
										},
										"\n",
										"region=",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"CustPrefix=",
										{
											"Ref":"prefix"
										},
										"\n"
									]
								]
							}
						},
						"c:\\Windows\\Temp\\rename-system.ps1":{
							"source":{
								"Ref":"RenameSystemURL"
							}
						},
						"c:\\Windows\\Temp\\grains":{
							"content":{
								"Fn::Join":[
									"",
									[
										"HostedZone: ",
										{
											"Ref":"HostedZone"
										},
										"\n",
										"s3bucketname: ",
										{
											"Fn::Join":[
												"",
												[
													"kel-",
													{
														"Ref":"AccountName"
													},
													"-appdata-",
													{
														"Ref":"AWS::Region"
													}
												]
											]
										},
										"\n",
										"S3InitialPath: ",
										{
											"Ref":"S3InitialPath"
										},
										"\n",
										"S3Region: ",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"region: ",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"prefix: ",
										{
											"Ref":"prefix"
										},
										"\n",
										"AccountName: ",
										{
											"Ref":"AccountName"
										},
										"\n",
										"pillarroot: ",
										{
											"Ref":"pillarroot"
										},
										"\n",
										"role: ",
										{
											"Ref":"instancerole"
										},
										"-webui\n"
									]
								]
							}
						},
						"c:\\Windows\\cwi\\hooks.d\\cfn-auto-reloader.conf":{
							"content":{
								"Fn::Join":[
									"",
									[
										"[cfn-auto-reloader-hook]\n",
										"triggers=post.update\n",
										"path=Resources.CE.Metadata.AWS::CloudFormation::Init\n",
										"action=cfn-init.exe -v -s ",
										{
											"Ref":"AWS::StackId"
										},
										" -r CE",
										" --region ",
										{
											"Ref":"AWS::Region"
										},
										"\n"
									]
								]
							}
						},
						"C:\\kelbc\\log\\initscript.log":{
							"content":"*****************initscript******************************"
						}
					},
					"commands":{
						"1-execute-rename-system":{
							"command":{
								"Fn::Join":[
									"",
									[
										"powershell.exe -ExecutionPolicy Unrestricted C:\\Windows\\Temp\\rename-system.ps1 -appOU IR -name MGMC-IID -iid -domain ",
										{
											"Ref":"DomainName"
										},
										" ",
										"-credentialsURL s3://kel-",
										{
											"Ref":"AccountName"
										},
										"-credentials-",
										{
											"Ref":"AWS::Region"
										},
										"/mingle/domain/domain-join-creds.json -reboot"
									]
								]
							},
							"ignoreErrors":"true",
							"waitAfterCompletion" : "forever"
						},
						"2-enable-start-codedeploy-agent":{
							"command":"powershell.exe -ExecutionPolicy Unrestricted -Command \" & { Set-Service codedeployagent -StartupType Automatic; Start-Service codedeployagent }\" "
						},
						"3-signal-success":{
							"command":{
								"Fn::Join":[
									"",
									[
										"cfn-signal.exe -e 0 \"",
										{
											"Fn::Base64":{
												"Ref":"CEWEBUIWaitHandle"
											}
										},
										"\""
									]
								]
							},
							"waitAfterCompletion":"25"
						}
					}
				}
			}
		},
		"Properties":{
			"ImageId":{
				"Ref":"AMIID"
			},
			"SecurityGroups":[
				{
					"Ref":"defaultsg"
				},
				{
					"Ref":"outboundinternetsg"
				},
				{
					"Ref":"minglewebsg"
				}
			],
			"InstanceType":{
				"Ref":"CEType"
			},
			"EbsOptimized":"true",
			"KeyName":{
				"Ref":"KeyName"
			},
			"IamInstanceProfile":{
				"Ref":"CERootInstanceProfile"
			},
			"BlockDeviceMappings":[
				{
					"DeviceName":"/dev/sda1",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				},
				{
					"DeviceName":"xvdd",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				},
				{
					"DeviceName":"xvde",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				}
			],
			"UserData":{
				"Fn::Base64":{
					"Fn::Join":[
						"",
						[
							"<powershell>\n",
							"cfn-init.exe -v -s ",
							{
								"Ref":"AWS::StackId"
							},
							" -r CEWEBUILAUNCHCONFIG",
							" --region ",
							{
								"Ref":"AWS::Region"
							},
							"\n",
							"</powershell>"
						]
					]
				}
			}
		}
	},
	"CEWEBUIWaitHandle":{
		"Type":"AWS::CloudFormation::WaitConditionHandle"
	},
	"CEWEBUIWaitCondition":{
		"Type":"AWS::CloudFormation::WaitCondition",
		"DependsOn":"CEWEBUISERVER",
		"Properties":{
			"Handle":{
				"Ref":"CEWEBUIWaitHandle"
			},
			"Timeout":"7200",
			"Count":{
				"Ref":"CECapacity"
			}
		}
	},
	"CEWEBUIAutoscaleUpPolicy":{
		"Type":"AWS::AutoScaling::ScalingPolicy",
		"Properties":{
			"AdjustmentType":"PercentChangeInCapacity",
			"AutoScalingGroupName":{
				"Ref":"CEWEBUISERVER"
			},
			"Cooldown":"300",
			"ScalingAdjustment":"50"
		}
	},
	"CEWEBUIAutoscaleDownPolicy":{
		"Type":"AWS::AutoScaling::ScalingPolicy",
		"Properties":{
			"AdjustmentType":"PercentChangeInCapacity",
			"AutoScalingGroupName":{
				"Ref":"CEWEBUISERVER"
			},
			"Cooldown":"300",
			"ScalingAdjustment":"-33"
		}
	},
	"CEWEBUICloudWatchCPUAlarmHigh":{
		"Type":"AWS::CloudWatch::Alarm",
		"Properties":{
			"AlarmDescription":"SNS Notification if CPU Util is Higher than 90% for 10 mins",
			"MetricName":"CPUUtilization",
			"Namespace":"AWS/EC2",
			"Statistic":"Average",
			"Period":"300",
			"EvaluationPeriods":"2",
			"Threshold":"90",
			"AlarmActions":[
				{
					"Ref":"CEWEBUIAutoscaleUpPolicy"
				},
				{
					"Ref":"CESNSTopic"
				}
			],
			"Dimensions":[
				{
					"Name":"AutoScalingGroupName",
					"Value":{
						"Ref":"CEWEBUISERVER"
					}
				}
			],
			"ComparisonOperator":"GreaterThanThreshold"
		}
	},
	"CEWEBUICloudWatchCPUAlarmLow":{
		"Type":"AWS::CloudWatch::Alarm",
		"Properties":{
			"AlarmDescription":"SNS Notification if CPU Util is less than 70% for 10 mins",
			"MetricName":"CPUUtilization",
			"Namespace":"AWS/EC2",
			"Statistic":"Average",
			"Period":"300",
			"EvaluationPeriods":"2",
			"Threshold":"70",
			"AlarmActions":[
				{
					"Ref":"CEWEBUIAutoscaleDownPolicy"
				},
				{
					"Ref":"CESNSTopic"
				}
			],
			"Dimensions":[
				{
					"Name":"AutoScalingGroupName",
					"Value":{
						"Ref":"CEWEBUISERVER"
					}
				}
			],
			"ComparisonOperator":"LessThanThreshold"
		}
	},
	"CEWEBSERVICESERVER":{
		"Type":"AWS::AutoScaling::AutoScalingGroup",
		"DependsOn":"CEBGWaitCondition",
		"Properties":{
			"AvailabilityZones":{
				"Ref":"AZ"
			},
			"VPCZoneIdentifier":{
				"Ref":"ASGSubnets"
			},
			"MinSize":{
				"Ref":"CECapacity"
			},
			"MaxSize":"5",
			"NotificationConfiguration":{
				"TopicARN":{
					"Ref":"CESNSTopic"
				},
				"NotificationTypes":[
					"autoscaling:EC2_INSTANCE_LAUNCH",
					"autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
					"autoscaling:EC2_INSTANCE_TERMINATE",
					"autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
				]
			},
			"LoadBalancerNames":[
				{
					"Ref":"ELBCEBRIDGE"
				},
				{
					"Ref":"ELBCEMINGLEPROV"
				},
				{
					"Ref":"ELBCEWEBSERVPINGSERV"
				},
				{
					"Ref":"ELBCEIFSAS"
				},
				{
					"Ref":"ELBCEIFSSCIM"
				},
				{
					"Ref":"ELBCEMINGLEWEBSERVICE"
				}
			],
			"DesiredCapacity":{
				"Ref":"CECapacity"
			},
			"LaunchConfigurationName":{
				"Ref":"CEWEBSERVICELAUNCHCONFIG"
			},
			"Tags":[
				{
					"Key":"Service",
					"Value":"CE-11.1:app",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Product",
					"Value":"mingle",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Name",
					"Value":{
						"Fn::Join":[
							"-",
							[
								"CEWEBSERVER",
								{
									"Ref":"prefix"
								}
							]
						]
					},
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Network",
					"Value":"public",
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Nightly",
					"Value":{
						"Ref":"NightlyTag"
					},
					"PropagateAtLaunch":"true"
				},
				{
					"Key":"Owner",
					"Value":{
						"Ref":"OwnerTag"
					},
					"PropagateAtLaunch":"true"
				}
			]
		}
	},
	"CEWEBSERVICELAUNCHCONFIG":{
		"Type":"AWS::AutoScaling::LaunchConfiguration",
		"Metadata":{
			"AWS::CloudFormation::Init":{
				"config":{
					"files":{
						"c:\\Windows\\cwi\\wininit.params":{
							"content":{
								"Fn::Join":[
									"",
									[
										"[CE]\n",
										"stack=",
										{
											"Ref":"AWS::StackId"
										},
										"\n",
										"region=",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"CustPrefix=",
										{
											"Ref":"prefix"
										},
										"\n"
									]
								]
							}
						},
						"c:\\Windows\\Temp\\rename-system.ps1":{
							"source":{
								"Ref":"RenameSystemURL"
							}
						},
						"c:\\Windows\\Temp\\grains":{
							"content":{
								"Fn::Join":[
									"",
									[
										"HostedZone: ",
										{
											"Ref":"HostedZone"
										},
										"\n",
										"s3bucketname: ",
										{
											"Fn::Join":[
												"",
												[
													"kel-",
													{
														"Ref":"AccountName"
													},
													"-appdata-",
													{
														"Ref":"AWS::Region"
													}
												]
											]
										},
										"\n",
										"S3InitialPath: ",
										{
											"Ref":"S3InitialPath"
										},
										"\n",
										"S3Region: ",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"region: ",
										{
											"Ref":"AWS::Region"
										},
										"\n",
										"prefix: ",
										{
											"Ref":"prefix"
										},
										"\n",
										"AccountName: ",
										{
											"Ref":"AccountName"
										},
										"\n",
										"pillarroot: ",
										{
											"Ref":"pillarroot"
										},
										"\n",
										"role: ",
										{
											"Ref":"instancerole"
										},
										"-webservice\n"
									]
								]
							}
						},
						"c:\\Windows\\cwi\\hooks.d\\cfn-auto-reloader.conf":{
							"content":{
								"Fn::Join":[
									"",
									[
										"[cfn-auto-reloader-hook]\n",
										"triggers=post.update\n",
										"path=Resources.CE.Metadata.AWS::CloudFormation::Init\n",
										"action=cfn-init.exe -v -s ",
										{
											"Ref":"AWS::StackId"
										},
										" -r CE",
										" --region ",
										{
											"Ref":"AWS::Region"
										},
										"\n"
									]
								]
							}
						},
						"C:\\kelbc\\log\\initscript.log":{
							"content":"*****************initscript******************************"
						}
					},
					"commands":{
						"1-execute-rename-system":{
							"command":{
								"Fn::Join":[
									"",
									[
										"powershell.exe -ExecutionPolicy Unrestricted C:\\Windows\\Temp\\rename-system.ps1 -appOU IR -name MGMC-IID -iid -domain ",
										{
											"Ref":"DomainName"
										},
										" ",
										"-credentialsURL s3://kel-",
										{
											"Ref":"AccountName"
										},
										"-credentials-",
										{
											"Ref":"AWS::Region"
										},
										"/mingle/domain/domain-join-creds.json -reboot"
									]
								]
							},
							"ignoreErrors":"true",
							"waitAfterCompletion" : "forever"
						},
						"2-enable-start-codedeploy-agent":{
							"command":"powershell.exe -ExecutionPolicy Unrestricted -Command \" & { Set-Service codedeployagent -StartupType Automatic; Start-Service codedeployagent }\" "
						},
						"3-signal-success":{
							"command":{
								"Fn::Join":[
									"",
									[
										"cfn-signal.exe -e 0 \"",
										{
											"Fn::Base64":{
												"Ref":"CEWEBSERVICEWaitHandle"
											}
										},
										"\""
									]
								]
							},
							"waitAfterCompletion":"25"
						}
					}
				}
			}
		},
		"Properties":{
			"ImageId":{
				"Ref":"AMIID"
			},
			"SecurityGroups":[
				{
					"Ref":"defaultsg"
				},
				{
					"Ref":"outboundinternetsg"
				},
				{
					"Ref":"minglewebsg"
				}
			],
			"InstanceType":{
				"Ref":"CEType"
			},
			"EbsOptimized":"true",
			"KeyName":{
				"Ref":"KeyName"
			},
			"IamInstanceProfile":{
				"Ref":"CERootInstanceProfile"
			},
			"BlockDeviceMappings":[
				{
					"DeviceName":"/dev/sda1",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				},
				{
					"DeviceName":"xvdd",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				},
				{
					"DeviceName":"xvde",
					"Ebs":{
						"VolumeSize":"200",
						"VolumeType":"gp2"
					}
				}
			],
			"UserData":{
				"Fn::Base64":{
					"Fn::Join":[
						"",
						[
							"<powershell>\n",
							"cfn-init.exe -v -s ",
							{
								"Ref":"AWS::StackId"
							},
							" -r CEWEBSERVICELAUNCHCONFIG",
							" --region ",
							{
								"Ref":"AWS::Region"
							},
							"\n",
							"</powershell>"
						]
					]
				}
			}
		}
	},
	"CEWEBSERVICEWaitHandle":{
		"Type":"AWS::CloudFormation::WaitConditionHandle"
	},
	"CEWEBSERVICEWaitCondition":{
		"Type":"AWS::CloudFormation::WaitCondition",
		"DependsOn":"CEWEBSERVICESERVER",
		"Properties":{
			"Handle":{
				"Ref":"CEWEBSERVICEWaitHandle"
			},
			"Timeout":"7200",
			"Count":{
				"Ref":"CECapacity"
			}
		}
	},
	"ELBCEBRIDGE":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEBRIDGEName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:6443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEBRIDGE",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"6443",
					"InstanceProtocol":"HTTPS",
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCEBRIDGER53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-bridge.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEBRIDGE",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEIFS":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEIFSName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:3443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LBCookieStickinessPolicy":[
				{
					"CookieExpirationPeriod":"900",
					"PolicyName":"ELBCEIFScookiepolicy"
				}
			],
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEIFS",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"3443",
					"InstanceProtocol":"HTTPS",
					"PolicyNames":[
						"ELBCEIFScookiepolicy"
					],
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCEIFSR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-ifs.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEIFS",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEPORTAL":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEPORTALName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:1443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEPORTAL",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"1443",
					"InstanceProtocol":"HTTPS",
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCEPORTALR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-portal.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEPORTAL",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCECOLLABO":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCECOLLABOName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:2443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCECOLLABO",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"2443",
					"InstanceProtocol":"HTTPS",
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCECOLLABOR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-collaboration.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCECOLLABO",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEMINGLEPROV":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEMINGLEPROVName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:5443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEMINGLEPROV",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"5443",
					"InstanceProtocol":"HTTPS",
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCEMINGLEPROVR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-provisioningservice.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEMINGLEPROV",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEWEBSERVPINGSERV":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEWEBSERVPINGSERVName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"TCP:2443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEWEBSERVPINGSERV",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"2443",
					"InstanceProtocol":"TCP",
					"Protocol":"TCP"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCEWEBSERVPINGSERVR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-ifsservice.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEWEBSERVPINGSERV",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEIFSAS":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEIFSASName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"TCP:1443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEIFSAS",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internal",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"1443",
					"InstanceProtocol":"TCP",
					"Protocol":"TCP"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"private"
				}
			]
		}
	},
	"ELBCEIFSASR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-ifsas.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEIFSAS",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEIFSSCIM":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEIFSSCIMName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:3443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEIFSSCIM",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internet-facing",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"3443",
					"InstanceProtocol":"HTTPS",
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"public"
				}
			]
		}
	},
	"ELBCEIFSSCIMR53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-scim.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEIFSSCIM",
						"DNSName"
					]
				}
			]
		}
	},
	"ELBCEMINGLEWEBSERVICE":{
		"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties":{
			"AccessLoggingPolicy":{
				"EmitInterval":60,
				"Enabled":true,
				"S3BucketName":{
					"Fn::Join":[
						"",
						[
							"kel-",
							{
								"Ref":"AccountName"
							},
							"-elblogs-",
							{
								"Ref":"AWS::Region"
							}
						]
					]
				},
				"S3BucketPrefix":"ELBCEMINGLEWEBSERVICEName"
			},
			"CrossZone":true,
			"ConnectionDrainingPolicy":{
				"Enabled":"true",
				"Timeout":"60"
			},
			"HealthCheck":{
				"Target":{
					"Fn::Join":[
						"",
						[
							"SSL:4443"
						]
					]
				},
				"HealthyThreshold":"10",
				"UnhealthyThreshold":"10",
				"Interval":"66",
				"Timeout":"60"
			},
			"LoadBalancerName":{
				"Fn::Join":[
					"",
					[
						"ELBCEMINGLEWEBSERVICE",
						{
							"Ref":"elbrunno"
						}
					]
				]
			},
			"Scheme":"internal",
			"Listeners":[
				{
					"LoadBalancerPort":"443",
					"InstancePort":"4443",
					"InstanceProtocol":"HTTPS",
					"SSLCertificateId":{"Fn::Join":["",["arn:aws:iam::",{"Ref":"AWS::AccountId"},":server-certificate/",{"Ref":"certificatename"}]]},
					"Protocol":"HTTPS"
				}
			],
			"SecurityGroups":[
				{
					"Ref":"publicelbsecuritygroup"
				}
			],
			"Subnets":{
				"Ref":"PublicELBSubnets"
			},
			"Tags":[
				{
					"Key":"Network",
					"Value":"private"
				}
			]
		}
	},
	"ELBCEMINGLEWEBSERVICER53":{
		"Type":"AWS::Route53::RecordSet",
		"Properties":{
			"HostedZoneName":{
				"Ref":"HostedZone"
			},
			"Comment":"CNAME for CE.",
			"Name":{
				"Fn::Join":[
					"",
					[
						{
							"Ref":"prefix"
						},
						"-minglews.",
						{
							"Ref":"HostedZone"
						}
					]
				]
			},
			"Type":"CNAME",
			"TTL":"900",
			"ResourceRecords":[
				{
					"Fn::GetAtt":[
						"ELBCEMINGLEWEBSERVICE",
						"DNSName"
					]
				}
			]
		}
	},
	"CEWEBSERVICEAutoscaleUpPolicy":{
		"Type":"AWS::AutoScaling::ScalingPolicy",
		"Properties":{
			"AdjustmentType":"PercentChangeInCapacity",
			"AutoScalingGroupName":{
				"Ref":"CEWEBSERVICESERVER"
			},
			"Cooldown":"300",
			"ScalingAdjustment":"50"
		}
	},
	"CEWEBSERVICEAutoscaleDownPolicy":{
		"Type":"AWS::AutoScaling::ScalingPolicy",
		"Properties":{
			"AdjustmentType":"PercentChangeInCapacity",
			"AutoScalingGroupName":{
				"Ref":"CEWEBSERVICESERVER"
			},
			"Cooldown":"300",
			"ScalingAdjustment":"-33"
		}
	},
	"CEWEBSERVICECloudWatchCPUAlarmHigh":{
		"Type":"AWS::CloudWatch::Alarm",
		"Properties":{
			"AlarmDescription":"SNS Notification if CPU Util is Higher than 90% for 10 mins",
			"MetricName":"CPUUtilization",
			"Namespace":"AWS/EC2",
			"Statistic":"Average",
			"Period":"300",
			"EvaluationPeriods":"2",
			"Threshold":"90",
			"AlarmActions":[
				{
					"Ref":"CEWEBSERVICEAutoscaleUpPolicy"
				},
				{
					"Ref":"CESNSTopic"
				}
			],
			"Dimensions":[
				{
					"Name":"AutoScalingGroupName",
					"Value":{
						"Ref":"CEWEBSERVICESERVER"
					}
				}
			],
			"ComparisonOperator":"GreaterThanThreshold"
		}
	},
	"CEWEBSERVICECloudWatchCPUAlarmLow":{
		"Type":"AWS::CloudWatch::Alarm",
		"Properties":{
			"AlarmDescription":"SNS Notification if CPU Util is less than 70% for 10 mins",
			"MetricName":"CPUUtilization",
			"Namespace":"AWS/EC2",
			"Statistic":"Average",
			"Period":"300",
			"EvaluationPeriods":"2",
			"Threshold":"70",
			"AlarmActions":[
				{
					"Ref":"CEWEBSERVICEAutoscaleDownPolicy"
				},
				{
					"Ref":"CESNSTopic"
				}
			],
			"Dimensions":[
				{
					"Name":"AutoScalingGroupName",
					"Value":{
						"Ref":"CEWEBSERVICESERVER"
					}
				}
			],
			"ComparisonOperator":"LessThanThreshold"
		}
	}
},
"Outputs":{
	"CEPrimaryURL":{
		"Value":{
			"Fn::Join":[
				"",
				[
					{
						"Fn::Join":[
							"",
							[
								"https://"
							]
						]
					},
					{
						"Fn::Join":[
							"",
							[
								{
									"Ref":"prefix"
								}
							]
						]
					},
					{
						"Fn::Join":[
							"",
							[
								"."
							]
						]
					},
					{
						"Fn::Join":[
							"",
							[
								{
									"Ref":"HostedZone"
								}
							]
						]
					},
					{
						"Fn::Join":[
							"",
							[
								"/"
							]
						]
					}
				]
			]
		},
		"Description":"kel CE Main URL."
	},
	"CEBGSERVER":{
		"Value":{
			"Ref":"CEBGSERVER"
		}
	},
	"CEWEBUISERVER":{
		"Value":{
			"Ref":"CEWEBUISERVER"
		}
	},
	"CEWEBSERVICESERVER":{
		"Value":{
			"Ref":"CEWEBSERVICESERVER"
		}
	}
}
}
